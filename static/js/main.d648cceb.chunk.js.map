{"version":3,"sources":["components/Editor/Canvas/Canvas.module.css","components/Editor/Canvas/Figure/Figure.module.css","components/Editor/Editor.module.css","stores/models/Canvas/canvas.types.ts","services/HistoryService.ts","stores/actionHandlers/canvasActionHandler.ts","stores/models/Canvas/Canvas.ts","stores/models/History/History.ts","stores/index.ts","hooks/useStore.ts","components/svg/Circle.tsx","components/svg/Square.tsx","components/svg/Triangle.tsx","components/SvgFigure/SvgFigure.tsx","components/Editor/Canvas/Figure/Figure.tsx","components/Editor/Canvas/FigureFrame/FigureFrame.tsx","components/Editor/Canvas/Canvas.tsx","components/Editor/ControlBar/ControlBar.tsx","components/Editor/Editor.tsx","containers/App/App.tsx","serviceWorker.js","index.tsx","components/Editor/Canvas/FigureFrame/FigureFrame.module.css","components/Editor/ControlBar/ControlBar.module.css"],"names":["module","exports","EResizeType","EFigureType","historyService","STORAGE_NAME","item","window","localStorage","setItem","this","JSON","stringify","value","getItem","parse","actionList","Figure","types","model","id","identifier","left","number","top","width","height","type","enumeration","Object","values","CanvasStore","figures","array","selectedFigureId","maybeNull","string","optional","isDragging","boolean","resizingType","DISABLE","minFigureWidth","minFigureHeight","figureTypes","views","self","find","figureItem","selectedFigure","LEFT_TOP","x","y","LEFT_BOT","RIGHT_TOP","RIGHT_BOT","actions","addFigure","figureType","newFigure","shortid","push","selectFigure","figureId","moveSelectedFigure","changeX","changeY","nextPositionLeft","nextPositionTop","deleteSelectedFigure","activeFigure","figure","destroy","startDragging","stopDragging","setResizingType","stopResizing","resizeSelectedFigure","figureChanges","resizeFigure","leftFactor","topFactor","widthFactor","heightFactor","diffMinWidth","diffMinHeight","CanvasHistoryModel","properties","HistoryStore","snapShots","activeSnapIndex","length","addSnapShot","snap","humanActiveIndex","splice","saveSnap","changeIndexBy","indexChange","targetSnapIndex","rootStore","getRoot","historySnap","targetSnap","getSnapshot","canvas","applySnapshot","history","canvasStoreData","getSnap","store","create","onAction","call","getPath","path","includes","name","canvasSnap","StoreContext","React","createContext","useStore","useContext","Circle","onClickInside","insideClassName","props","viewBox","className","onClick","cx","cy","rx","ry","Square","Triangle","points","figuresMap","SQUARE","TRIANGLE","CIRCLE","SvgFigure","svgProps","SvgFigureItem","observer","context","isSelected","useMemo","style","transform","preserveAspectRatio","classNames","styles","figureSelected","figureInside","e","event","MouseEvent","bubbles","cancelable","view","clientX","clientY","document","dispatchEvent","dotList","dotLeftTop","dotLeftBot","dotRightTop","dotRightBot","figureFrame","figureFrameCanDrag","isResizing","figureFrameDragging","figureFrameIsResizing","onMouseDown","stopPropagation","button","map","dot","key","resizeType","onDotMouseDown","canvasRef","useRef","cursorNW","cursorNE","onMouseMove","movementX","movementY","activeDotPosition","current","pageX","offsetLeft","pageY","offsetTop","onMouseLeave","currentTarget","ref","controlBar","figureList","nav","navLink","navLinkDisabled","canBack","canForward","editorRef","disableActions","useEffect","onKeyDown","addEventListener","removeEventListener","onMouseUp","mainContainer","content","App","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d648cceb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"canvas\":\"Canvas_canvas__2RoZx\",\"cursorNW\":\"Canvas_cursorNW__33ger\",\"cursorNE\":\"Canvas_cursorNE__nNk2-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"figure\":\"Figure_figure__11N-U\",\"figureSelected\":\"Figure_figureSelected__ZPkLY\",\"figureInside\":\"Figure_figureInside__2aIvI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"Editor_mainContainer__1_Pj-\",\"content\":\"Editor_content__3NR9L\"};","export enum EResizeType {\r\n  DISABLE = 'disable',\r\n  LEFT_TOP = 'left-top',\r\n  LEFT_BOT = 'left-bottom',\r\n  RIGHT_TOP = 'right-top',\r\n  RIGHT_BOT = 'right-bottom',\r\n}\r\n\r\nexport enum EFigureType {\r\n  CIRCLE = 'circle',\r\n  SQUARE = 'square',\r\n  TRIANGLE = 'triangle',\r\n}\r\n","import { ICanvasHistory } from '../stores/models/History/History';\r\n\r\nclass HistoryService {\r\n  private readonly STORAGE_NAME = 'CANVAS';\r\n\r\n  public saveSnap(item: ICanvasHistory): void {\r\n    window.localStorage.setItem(this.STORAGE_NAME, JSON.stringify(item));\r\n  }\r\n\r\n  public getSnap(): ICanvasHistory | {} {\r\n    const value = window.localStorage.getItem(this.STORAGE_NAME);\r\n    return value ? JSON.parse(value) : {};\r\n  }\r\n}\r\n\r\nexport const historyService = new HistoryService();\r\n","import { getPath, getSnapshot, ISerializedActionCall } from 'mobx-state-tree';\r\nimport { store } from '../index';\r\n\r\nconst actionList = [\r\n  'addFigure',\r\n  'deleteSelectedFigure',\r\n  'stopDragging',\r\n  'stopResizing',\r\n];\r\n\r\nexport const canvasActionHandler = (call: ISerializedActionCall) => {\r\n  if (getPath(store.canvas) === call.path && actionList.includes(call.name)) {\r\n    const canvasSnap = getSnapshot(store.canvas);\r\n    store.history.addSnapShot(canvasSnap);\r\n  }\r\n};\r\n","import { destroy, SnapshotIn, types } from 'mobx-state-tree';\r\nimport shortid from 'shortid';\r\nimport { EFigureType, EResizeType } from './canvas.types';\r\n\r\nexport const Figure = types.model({\r\n  id: types.identifier,\r\n  left: types.number,\r\n  top: types.number,\r\n  width: types.number,\r\n  height: types.number,\r\n  type: types.enumeration(Object.values(EFigureType)),\r\n});\r\n\r\nexport type IFigure = SnapshotIn<typeof Figure>;\r\n\r\nexport const CanvasStore = types\r\n  .model({\r\n    figures: types.array(Figure),\r\n    selectedFigureId: types.maybeNull(types.string),\r\n    width: types.optional(types.number, 800),\r\n    height: types.optional(types.number, 600),\r\n    isDragging: types.optional(types.boolean, false),\r\n    resizingType: types.optional(\r\n      types.enumeration(Object.values(EResizeType)),\r\n      EResizeType.DISABLE\r\n    ),\r\n    minFigureWidth: types.optional(types.number, 100),\r\n    minFigureHeight: types.optional(types.number, 100),\r\n    figureTypes: types.optional(\r\n      types.array(types.enumeration(Object.values(EFigureType))),\r\n      Object.values(EFigureType)\r\n    ),\r\n  })\r\n  .views(self => ({\r\n    get isResizing() {\r\n      return self.resizingType !== EResizeType.DISABLE;\r\n    },\r\n    get selectedFigure() {\r\n      return self.figures.find(\r\n        figureItem => figureItem.id === self.selectedFigureId\r\n      );\r\n    },\r\n  }))\r\n  .views(self => ({\r\n    get activeDotPosition() {\r\n      if (!self.selectedFigure) {\r\n        return;\r\n      }\r\n      switch (self.resizingType) {\r\n        case EResizeType.LEFT_TOP:\r\n          return {\r\n            x: self.selectedFigure.left,\r\n            y: self.selectedFigure.top,\r\n          };\r\n        case EResizeType.LEFT_BOT:\r\n          return {\r\n            x: self.selectedFigure.left,\r\n            y: self.selectedFigure.top + self.selectedFigure.height,\r\n          };\r\n        case EResizeType.RIGHT_TOP:\r\n          return {\r\n            x: self.selectedFigure.left + self.selectedFigure.width,\r\n            y: self.selectedFigure.top,\r\n          };\r\n        case EResizeType.RIGHT_BOT:\r\n          return {\r\n            x: self.selectedFigure.left + self.selectedFigure.width,\r\n            y: self.selectedFigure.top + self.selectedFigure.height,\r\n          };\r\n      }\r\n    },\r\n  }))\r\n  .actions(self => ({\r\n    addFigure(figureType: EFigureType, width = 150, height = 150) {\r\n      const newFigure = {\r\n        id: shortid(),\r\n        type: figureType,\r\n        width,\r\n        height,\r\n        left: self.width / 2 - width / 2,\r\n        top: self.height / 2 - height / 2,\r\n      };\r\n      self.figures.push(newFigure);\r\n      self.selectedFigureId = newFigure.id;\r\n      return newFigure;\r\n    },\r\n\r\n    selectFigure(figureId: string | null) {\r\n      self.selectedFigureId = figureId;\r\n    },\r\n\r\n    moveSelectedFigure(changeX: number, changeY: number) {\r\n      if (!self.selectedFigure) {\r\n        return;\r\n      }\r\n      // set position left\r\n      let nextPositionLeft = self.selectedFigure.left + changeX;\r\n      if (nextPositionLeft < 0) {\r\n        nextPositionLeft = 0;\r\n      }\r\n      if (nextPositionLeft > self.width - self.selectedFigure.width) {\r\n        nextPositionLeft = self.width - self.selectedFigure.width;\r\n      }\r\n      self.selectedFigure.left = nextPositionLeft;\r\n\r\n      // set position top\r\n      let nextPositionTop = self.selectedFigure.top + changeY;\r\n      if (nextPositionTop < 0) {\r\n        nextPositionTop = 0;\r\n      }\r\n      if (nextPositionTop > self.height - self.selectedFigure.height) {\r\n        nextPositionTop = self.height - self.selectedFigure.height;\r\n      }\r\n      self.selectedFigure.top = nextPositionTop;\r\n    },\r\n\r\n    deleteSelectedFigure() {\r\n      const activeFigure = self.figures.find(\r\n        figure => figure.id === self.selectedFigureId\r\n      );\r\n      if (activeFigure) {\r\n        destroy(activeFigure);\r\n        self.selectedFigureId = null;\r\n      }\r\n    },\r\n\r\n    startDragging() {\r\n      self.isDragging = true;\r\n    },\r\n\r\n    stopDragging() {\r\n      self.isDragging = false;\r\n    },\r\n\r\n    setResizingType(type: EResizeType) {\r\n      self.resizingType = type;\r\n    },\r\n\r\n    stopResizing() {\r\n      self.resizingType = EResizeType.DISABLE;\r\n    },\r\n\r\n    resizeSelectedFigure(changeX: number, changeY: number) {\r\n      if (!self.selectedFigure || (!changeX && !changeY)) {\r\n        return;\r\n      }\r\n      const figureChanges = {\r\n        left: self.selectedFigure.left,\r\n        top: self.selectedFigure.top,\r\n        width: self.selectedFigure.width,\r\n        height: self.selectedFigure.height,\r\n      };\r\n\r\n      const resizeFigure = (\r\n        leftFactor: number,\r\n        topFactor: number,\r\n        widthFactor: number,\r\n        heightFactor: number\r\n      ) => {\r\n        if (!self.selectedFigure) {\r\n          return;\r\n        }\r\n        figureChanges.left += changeX * leftFactor;\r\n        figureChanges.top += changeY * topFactor;\r\n        figureChanges.width += changeX * widthFactor;\r\n        figureChanges.height += changeY * heightFactor;\r\n\r\n        // if out left\r\n        if (figureChanges.left < 0) {\r\n          figureChanges.width += figureChanges.left;\r\n          figureChanges.left = 0;\r\n        }\r\n\r\n        // if out right\r\n        if (figureChanges.left + figureChanges.width > self.width) {\r\n          figureChanges.width = self.width - figureChanges.left;\r\n        }\r\n\r\n        // if out top\r\n        if (figureChanges.top < 0) {\r\n          figureChanges.height += figureChanges.top;\r\n          figureChanges.top = 0;\r\n        }\r\n\r\n        // if out bot\r\n        if (figureChanges.top + figureChanges.height > self.height) {\r\n          figureChanges.height = self.height - figureChanges.top;\r\n        }\r\n\r\n        // if less than min width\r\n        if (figureChanges.width < self.minFigureWidth) {\r\n          const diffMinWidth = self.minFigureWidth - figureChanges.width;\r\n          // back changes to min\r\n          figureChanges.width = self.minFigureWidth;\r\n          figureChanges.left += diffMinWidth * leftFactor * -1;\r\n        }\r\n\r\n        // if less than min height\r\n        if (figureChanges.height < self.minFigureHeight) {\r\n          const diffMinHeight = self.minFigureHeight - figureChanges.height;\r\n          // back changes to min\r\n          figureChanges.height = self.minFigureHeight;\r\n          figureChanges.top += diffMinHeight * topFactor * -1;\r\n        }\r\n\r\n        // update figure\r\n        self.selectedFigure.left = figureChanges.left;\r\n        self.selectedFigure.top = figureChanges.top;\r\n        self.selectedFigure.width = figureChanges.width;\r\n        self.selectedFigure.height = figureChanges.height;\r\n      };\r\n\r\n      // set sizes and position based on resize type\r\n      switch (self.resizingType) {\r\n        case EResizeType.LEFT_TOP:\r\n          resizeFigure(1, 1, -1, -1);\r\n          break;\r\n        case EResizeType.LEFT_BOT:\r\n          resizeFigure(1, 0, -1, 1);\r\n          break;\r\n        case EResizeType.RIGHT_TOP:\r\n          resizeFigure(0, 1, 1, -1);\r\n          break;\r\n        case EResizeType.RIGHT_BOT:\r\n          resizeFigure(0, 0, 1, 1);\r\n          break;\r\n        case EResizeType.DISABLE:\r\n          return;\r\n      }\r\n    },\r\n  }));\r\n","import {\r\n  applySnapshot,\r\n  getRoot,\r\n  getSnapshot,\r\n  SnapshotOut,\r\n  types,\r\n} from 'mobx-state-tree';\r\nimport { historyService } from 'services/HistoryService';\r\nimport { CanvasStore, IFigure } from '../Canvas/Canvas';\r\n\r\nconst CanvasHistoryModel = types.model({\r\n  figures: CanvasStore.properties.figures,\r\n});\r\n\r\nexport interface ICanvasHistory {\r\n  figures: IFigure[];\r\n}\r\n\r\nexport const HistoryStore = types\r\n  .model({\r\n    snapShots: types.array(CanvasHistoryModel),\r\n    activeSnapIndex: types.optional(types.number, 0),\r\n  })\r\n  .views(self => ({\r\n    get canBack() {\r\n      return !!self.activeSnapIndex;\r\n    },\r\n    get canForward() {\r\n      return self.activeSnapIndex + 1 < self.snapShots.length;\r\n    },\r\n  }))\r\n  .actions(self => ({\r\n    addSnapShot(snap: SnapshotOut<typeof CanvasStore>) {\r\n      const humanActiveIndex = self.activeSnapIndex + 1;\r\n      // remove snaps after active\r\n      if (humanActiveIndex < self.snapShots.length) {\r\n        self.snapShots.splice(\r\n          humanActiveIndex,\r\n          self.snapShots.length - humanActiveIndex\r\n        );\r\n      }\r\n      self.snapShots.push(snap);\r\n      self.activeSnapIndex = self.snapShots.length - 1;\r\n\r\n      historyService.saveSnap(self.snapShots[self.activeSnapIndex]);\r\n    },\r\n    changeIndexBy(indexChange: number) {\r\n      const targetSnapIndex = self.activeSnapIndex + indexChange;\r\n      const rootStore = getRoot(self);\r\n\r\n      if (targetSnapIndex + 1 > self.snapShots.length) {\r\n        return;\r\n      }\r\n      const historySnap = self.snapShots[targetSnapIndex];\r\n      const targetSnap = {\r\n        ...getSnapshot(rootStore.canvas),\r\n        ...getSnapshot(historySnap),\r\n      };\r\n      self.activeSnapIndex = targetSnapIndex;\r\n      applySnapshot(rootStore.canvas, targetSnap);\r\n\r\n      historyService.saveSnap(historySnap);\r\n    },\r\n  }));\r\n","import { onAction, types } from 'mobx-state-tree';\r\nimport React from 'react';\r\nimport { historyService } from 'services/HistoryService';\r\nimport { canvasActionHandler } from './actionHandlers/canvasActionHandler';\r\nimport { CanvasStore } from './models/Canvas/Canvas';\r\nimport { HistoryStore } from './models/History/History';\r\n\r\nconst model = types.model({\r\n  canvas: CanvasStore,\r\n  history: HistoryStore,\r\n});\r\n\r\nconst canvasStoreData = {\r\n  figures: [],\r\n  ...historyService.getSnap(),\r\n};\r\n\r\nexport const store = model.create({\r\n  canvas: canvasStoreData,\r\n  history: {\r\n    snapShots: [canvasStoreData],\r\n  },\r\n});\r\n\r\nonAction(store, canvasActionHandler, true);\r\n\r\nexport type IStore = typeof store;\r\nexport const StoreContext = React.createContext(store);\r\n","import { useContext } from 'react';\r\nimport { IStore, StoreContext } from 'stores';\r\n\r\nexport const useStore = (): IStore => {\r\n  return useContext(StoreContext);\r\n};\r\n","import React from 'react';\r\nimport { ISvgFigureProps } from './ISvgFigureProps';\r\n\r\nconst Circle: React.FC<ISvgFigureProps> = ({\r\n  onClickInside,\r\n  insideClassName,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <svg viewBox=\"-1 -1 32 32\" {...props}>\r\n      <ellipse\r\n        className={insideClassName}\r\n        onClick={onClickInside}\r\n        cx=\"15\"\r\n        cy=\"15\"\r\n        rx=\"15\"\r\n        ry=\"15\"\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Circle;\r\n","import React from 'react';\r\nimport { ISvgFigureProps } from './ISvgFigureProps';\r\n\r\nconst Square: React.FC<ISvgFigureProps> = ({\r\n  onClickInside,\r\n  insideClassName,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <svg viewBox=\"-1 -1 32 32\" {...props}>\r\n      <rect\r\n        className={insideClassName}\r\n        onClick={onClickInside}\r\n        width=\"30\"\r\n        height=\"30\"\r\n      />\r\n    </svg>\r\n  );\r\n};\r\nexport default Square;\r\n","import React from 'react';\r\nimport { ISvgFigureProps } from './ISvgFigureProps';\r\n\r\nconst Triangle: React.FC<ISvgFigureProps> = ({\r\n  onClickInside,\r\n  insideClassName,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <svg viewBox=\"-1 -1 32 32\" {...props}>\r\n      <polygon\r\n        className={insideClassName}\r\n        onClick={onClickInside}\r\n        points=\"15,0 00,30 30,30\"\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Triangle;\r\n","import React from 'react';\r\nimport { EFigureType } from 'stores/models/Canvas/canvas.types';\r\nimport Circle from '../svg/Circle';\r\nimport Square from '../svg/Square';\r\nimport Triangle from '../svg/Triangle';\r\nimport { ISvgFigureProps } from '../svg/ISvgFigureProps';\r\n\r\nexport const figuresMap = {\r\n  [EFigureType.SQUARE]: Square,\r\n  [EFigureType.TRIANGLE]: Triangle,\r\n  [EFigureType.CIRCLE]: Circle,\r\n};\r\n\r\ninterface IProps extends ISvgFigureProps {\r\n  type: EFigureType;\r\n}\r\n\r\nconst SvgFigure: React.FC<IProps> = ({ type, ...svgProps }) => {\r\n  const SvgFigureItem = figuresMap[type];\r\n  return SvgFigureItem ? <SvgFigureItem {...svgProps} /> : null;\r\n};\r\n\r\nexport default SvgFigure;\r\n","import classNames from 'classnames';\r\nimport SvgFigure from 'components/SvgFigure/SvgFigure';\r\nimport { useStore } from 'hooks/useStore';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React, { MouseEvent, useMemo } from 'react';\r\nimport { IFigure } from 'stores/models/Canvas/Canvas';\r\nimport styles from './Figure.module.css';\r\n\r\ninterface IProps {\r\n  figure: IFigure;\r\n}\r\n\r\nconst Figure: React.FC<IProps> = ({ figure }) => {\r\n  const context = useStore();\r\n\r\n  const isSelected = useMemo(() => {\r\n    return figure.id === context.canvas.selectedFigureId;\r\n  }, [figure.id, context.canvas.selectedFigureId]);\r\n\r\n  const onFigureClick = (e: MouseEvent) => {\r\n    const event = new window.MouseEvent('click', {\r\n      bubbles: true,\r\n      cancelable: true,\r\n      view: window,\r\n      clientX: e.clientX,\r\n      clientY: e.clientY,\r\n    });\r\n    document.dispatchEvent(event);\r\n    if (!isSelected) {\r\n      context.canvas.selectFigure(figure.id);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SvgFigure\r\n      type={figure.type}\r\n      style={{\r\n        width: figure.width,\r\n        height: figure.height,\r\n        transform: `translate3d(\r\n          ${figure.left}px,\r\n          ${figure.top}px,\r\n          0\r\n        )`,\r\n      }}\r\n      preserveAspectRatio=\"none\"\r\n      className={classNames(styles.figure, {\r\n        [styles.figureSelected]: isSelected,\r\n      })}\r\n      insideClassName={styles.figureInside}\r\n      onClickInside={onFigureClick}\r\n    />\r\n  );\r\n};\r\n\r\nexport default observer(Figure);\r\n","import React, { MouseEvent } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { useStore } from 'hooks/useStore';\r\nimport styles from './FigureFrame.module.css';\r\nimport { EResizeType } from 'stores/models/Canvas/canvas.types';\r\nimport classNames from 'classnames';\r\n\r\nconst dotList = [\r\n  {\r\n    type: EResizeType.LEFT_TOP,\r\n    className: styles.dotLeftTop,\r\n  },\r\n  {\r\n    type: EResizeType.LEFT_BOT,\r\n    className: styles.dotLeftBot,\r\n  },\r\n  {\r\n    type: EResizeType.RIGHT_TOP,\r\n    className: styles.dotRightTop,\r\n  },\r\n  {\r\n    type: EResizeType.RIGHT_BOT,\r\n    className: styles.dotRightBot,\r\n  },\r\n];\r\n\r\nconst FigureFrame: React.FC = () => {\r\n  const context = useStore();\r\n  const selectedFigure = context.canvas.selectedFigure;\r\n\r\n  const onDotMouseDown = (e: MouseEvent, resizeType: EResizeType) => {\r\n    e.stopPropagation();\r\n    const isLeftMouseButton = e.button === 0;\r\n    if (isLeftMouseButton) {\r\n      context.canvas.setResizingType(resizeType);\r\n    }\r\n  };\r\n\r\n  const onFigureFrameMouseDown = (e: MouseEvent) => {\r\n    e.stopPropagation();\r\n    const isLeftMouseButton = e.button === 0;\r\n    if (isLeftMouseButton) {\r\n      context.canvas.startDragging();\r\n    }\r\n  };\r\n\r\n  if (!selectedFigure) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: selectedFigure.width,\r\n        height: selectedFigure.height,\r\n        transform: `translate3d(\r\n          ${selectedFigure.left}px,\r\n          ${selectedFigure.top}px,\r\n          0\r\n        )`,\r\n      }}\r\n      className={classNames(styles.figureFrame, {\r\n        [styles.figureFrameCanDrag]: !context.canvas.isResizing,\r\n        [styles.figureFrameDragging]: context.canvas.isDragging,\r\n        [styles.figureFrameIsResizing]: context.canvas.isResizing,\r\n      })}\r\n      onMouseDown={onFigureFrameMouseDown}\r\n    >\r\n      {dotList.map(dot => (\r\n        <div\r\n          key={dot.type}\r\n          onMouseDown={e => onDotMouseDown(e, dot.type)}\r\n          className={classNames(styles.dot, dot.className)}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(FigureFrame);\r\n","import { useStore } from 'hooks/useStore';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React, { MouseEvent, MutableRefObject, useRef } from 'react';\r\nimport styles from './Canvas.module.css';\r\nimport Figure from './Figure/Figure';\r\nimport FigureFrame from './FigureFrame/FigureFrame';\r\nimport classNames from 'classnames';\r\nimport { EResizeType } from 'stores/models/Canvas/canvas.types';\r\n\r\nconst Canvas = () => {\r\n  const context = useStore();\r\n  const canvasRef: MutableRefObject<HTMLDivElement | null> = useRef(null);\r\n\r\n  const onMouseDown = (e: MouseEvent) => {\r\n    if (\r\n      e.currentTarget === canvasRef.current &&\r\n      context.canvas.selectedFigureId\r\n    ) {\r\n      context.canvas.selectFigure(null);\r\n    }\r\n  };\r\n  const onMouseLeave = (e: MouseEvent) => {\r\n    if (e.currentTarget === canvasRef.current) {\r\n      if (context.canvas.isDragging) {\r\n        context.canvas.stopDragging();\r\n      }\r\n    }\r\n  };\r\n  const onMouseMove = (e: MouseEvent) => {\r\n    if (context.canvas.isDragging) {\r\n      context.canvas.moveSelectedFigure(e.movementX, e.movementY);\r\n    }\r\n    const activeDotPosition = context.canvas.activeDotPosition;\r\n    if (context.canvas.isResizing && canvasRef.current && activeDotPosition) {\r\n      // resize based on relative position and activeDot\r\n      context.canvas.resizeSelectedFigure(\r\n        e.pageX - canvasRef.current.offsetLeft - activeDotPosition.x,\r\n        e.pageY - canvasRef.current.offsetTop - activeDotPosition.y\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={classNames({\r\n        [styles.canvas]: true,\r\n        [styles.cursorNW]: [\r\n          EResizeType.LEFT_TOP,\r\n          EResizeType.RIGHT_BOT,\r\n        ].includes(context.canvas.resizingType),\r\n        [styles.cursorNE]: [\r\n          EResizeType.LEFT_BOT,\r\n          EResizeType.RIGHT_TOP,\r\n        ].includes(context.canvas.resizingType),\r\n      })}\r\n      style={{ width: context.canvas.width, height: context.canvas.height }}\r\n      onMouseMove={onMouseMove}\r\n      onMouseLeave={onMouseLeave}\r\n      onMouseDown={onMouseDown}\r\n      ref={canvasRef}\r\n    >\r\n      {context.canvas.figures.map(figure => (\r\n        <Figure key={figure.id} figure={figure} />\r\n      ))}\r\n      {context.canvas.selectedFigure && <FigureFrame />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(Canvas);\r\n","import classNames from 'classnames';\r\nimport SvgFigure from 'components/SvgFigure/SvgFigure';\r\nimport { useStore } from 'hooks/useStore';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport styles from './ControlBar.module.css';\r\n\r\nconst ControlBar = () => {\r\n  const context = useStore();\r\n\r\n  return (\r\n    <div className={styles.controlBar}>\r\n      <div className={styles.figureList}>\r\n        {context.canvas.figureTypes.map(figureType => {\r\n          return (\r\n            <SvgFigure\r\n              key={figureType}\r\n              type={figureType}\r\n              onClick={() => context.canvas.addFigure(figureType)}\r\n              className={styles.figure}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n      <div className={styles.nav}>\r\n        <div\r\n          onClick={() => context.history.changeIndexBy(-1)}\r\n          className={classNames({\r\n            [styles.navLink]: true,\r\n            [styles.navLinkDisabled]: !context.history.canBack,\r\n          })}\r\n        >\r\n          &larr; prev\r\n        </div>\r\n        <div\r\n          onClick={() => context.history.changeIndexBy(1)}\r\n          className={classNames({\r\n            [styles.navLink]: true,\r\n            [styles.navLinkDisabled]: !context.history.canForward,\r\n          })}\r\n        >\r\n          next &rarr;\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(ControlBar);\r\n","import { useStore } from 'hooks/useStore';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React, { MouseEvent, useEffect, useRef } from 'react';\r\nimport Canvas from './Canvas/Canvas';\r\nimport ControlBar from './ControlBar/ControlBar';\r\nimport styles from './Editor.module.css';\r\n\r\nconst Editor = () => {\r\n  const context = useStore();\r\n  const editorRef = useRef(null);\r\n  const isEditorTarget = (target: EventTarget) => {\r\n    return target === editorRef.current;\r\n  };\r\n  const disableActions = (e: MouseEvent) => {\r\n    if (isEditorTarget(e.currentTarget)) {\r\n      if (context.canvas.isDragging) {\r\n        context.canvas.stopDragging();\r\n      }\r\n      if (context.canvas.isResizing) {\r\n        context.canvas.stopResizing();\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const onKeyDown = (e: KeyboardEvent) => {\r\n      if (context.canvas.selectedFigureId) {\r\n        if (e.key === 'Delete') {\r\n          context.canvas.deleteSelectedFigure();\r\n        }\r\n        if (e.key === 'Escape') {\r\n          context.canvas.selectFigure(null);\r\n        }\r\n      }\r\n    };\r\n    window.document.addEventListener('keydown', onKeyDown);\r\n    return () => {\r\n      window.document.removeEventListener('keydown', onKeyDown);\r\n    };\r\n  }, [context.canvas]);\r\n\r\n  return (\r\n    <div\r\n      onMouseUp={disableActions}\r\n      onMouseLeave={disableActions}\r\n      className={styles.mainContainer}\r\n      ref={editorRef}\r\n    >\r\n      <div className={styles.content}>\r\n        <ControlBar />\r\n        <Canvas />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(Editor);\r\n","import React from 'react';\r\nimport Editor from '../../components/Editor/Editor';\r\n\r\nconst App = () => {\r\n  return <Editor />;\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { connectReduxDevtools } from 'mst-middlewares';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './containers/App/App';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { store } from 'stores';\r\n\r\nif (process.env.NODE_ENV === 'development') {\r\n  // tslint:disable-next-line:no-var-requires\r\n  connectReduxDevtools(require('remotedev'), store);\r\n}\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"figureFrame\":\"FigureFrame_figureFrame__3u_wv\",\"figureFrameCanDrag\":\"FigureFrame_figureFrameCanDrag__zyI4L\",\"figureFrameDragging\":\"FigureFrame_figureFrameDragging__Fz2Zn\",\"figureFrameIsResizing\":\"FigureFrame_figureFrameIsResizing__2VczY\",\"dot\":\"FigureFrame_dot__13GyJ\",\"dotLeftTop\":\"FigureFrame_dotLeftTop__1ZFIB\",\"dotLeftBot\":\"FigureFrame_dotLeftBot__2HOVY\",\"dotRightTop\":\"FigureFrame_dotRightTop__3GUvo\",\"dotRightBot\":\"FigureFrame_dotRightBot__2wy_8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controlBar\":\"ControlBar_controlBar__3PY33\",\"figureList\":\"ControlBar_figureList__1J69d\",\"figure\":\"ControlBar_figure__2SWC2\",\"nav\":\"ControlBar_nav__3-9BT\",\"navLink\":\"ControlBar_navLink__35_ME\",\"navLinkDisabled\":\"ControlBar_navLinkDisabled__LBITr\"};"],"sourceRoot":""}